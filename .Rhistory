fit2 <- lm(medv~.-age-indus+I(lstat^2),data=train)
summary(fit2)
fit3 <- lm(medv~.-indus-age-zn+rm*lstat-black+rm*rad+lstat*rad,data=train)
summary(fit3)
residuals <- data.frame('Residuals' = fit3$residuals)
res_hist <- ggplot(residuals, aes(x=Residuals)) + geom_histogram(color='black', fill='skyblue') + ggtitle('Histogram of Residuals')
res_hist
plot(fit3, col='Sky Blue')
stat_smooth(aes(colour='black')) +
xlab('Actual value of medv') +
ylab('Predicted value of medv') +
theme_bw()
ggplotly(plot1)
library('MASS')
library('pacman')
pacman::p_load('ggplot2','caTools','dplyr','plotly')
housing<- Boston
set.seed(100)
split <- sample.split(housing,SplitRatio = 0.75) #assigns booleans to a new coloumn based on the split ratio
train <- subset(housing,split==TRUE)
test <- subset(housing,split==FALSE)
countofna <- length(which(is.na(housing)==T))
if(countofna>0) {
housing <- housing[complete.cases(housing),]
}
summary(housing)
head(housing)
par(mfrow = c(1, 4))
boxplot(housing$crim, main='crim',col='Sky Blue')
boxplot(housing$zn, main='zn',col='Sky Blue')
boxplot(housing$rm, main='rm',col='Sky Blue')
boxplot(housing$black, main='black',col='Sky Blue')
par(mfrow=c(1,1))
corrplot::corrplot(cor(housing))
dropList <- c('chas','rad','crim','zn','black')
housingplot <- housing[,!colnames(housing) %in% dropList]
splom(housingplot,col = 'Sky Blue')
#Fitting regression
fit1<- lm(medv~.,data=train)
summary(fit1)
fit2 <- lm(medv~.-age-indus+I(lstat^2),data=train)
summary(fit2)
fit3 <- lm(medv~.-indus-age-zn+rm*lstat-black+rm*rad+lstat*rad,data=train)
summary(fit3)
residuals <- data.frame('Residuals' = fit3$residuals)
res_hist <- ggplot(residuals, aes(x=Residuals)) + geom_histogram(color='black', fill='skyblue') + ggtitle('Histogram of Residuals')
res_hist
plot(fit3, col='Sky Blue')
stat_smooth(aes(colour='black')) +
xlab('Actual value of medv') +
ylab('Predicted value of medv') +
theme_bw()
ggplotly(plot1)
str(housing)
library(pacman)
library(pacman)
df = read_xlsx(file.choose())
b <- as.data.frame(table(df$`Customer No.`))
library(xlsx)
df = read_xlsx(file.choose())
b <- as.data.frame(table(df$`Customer No.`))
df = read_xlsx(file.choose())
b <- as.data.frame(table(df$`Customer No.`))
library(dplyr)
df = file.choose()
library(dplyr)
df = file.choose()
df = read.csv(file.choose())
View(df)
check1= table(df$company)
check1= as.data.frame(table(df$company))
View(check1)
View(check1)
check1= as.data.frame(table(df$company),des= T)
View(check1)
View(df)
View(check1)
check1= as.data.frame(table(df$company),desc= T)
View(check1)
check1= as.data.frame(table(df$company),desc= TRUE)
View(check1)
check1[order(check1$Freq),]
check1[order(-check1$Freq),]
is.na(df)
library(pacman)
pacman::p_load(sparklyr)
spark_install(version = "2.4.3")
sc <- spark_connect(master = "local")
spark_install(version = "3.0.1")
sc <- spark_connect(master = "local")
zillow_data <- file.choose()
zillow_data <- read.csv(file.choose())
View(zillow_data)
hpi_data <- read.csv(file.choose())
View(hpi_data)
hpi_data <- read.csv(file.choose())
View(hpi_data)
hpi_data <- read.csv(file.choose())
View(hpi_data)
hpi_data <- read.csv(file.choose())
View(hpi_data)
pacman::p_load('dplyr','ggplot2','DBI','dbplot')
zd_tbl <- copy_to(sc,zillow_data)
hpd_tbl <- copy_to(sc,hpi_data)
View(hpd_tbl)
View(zillow_data)
city <- dbGetQuery (sc, "Select city, Zhvi, RegionName, X5Year, X10Year from zillow")
city <- dbGetQuery(sc, "Select city, Zhvi, RegionName, X5Year, X10Year from zillow")
city <- dbGetQuery(sc,"Select city, Zhvi, RegionName, X5Year, X10Year from zillow")
src_tbls(sc)
city <- dbGetQuery(sc,"Select city, Zhvi, RegionName, X5Year, X10Year from zillow")
city <- dbGetQuery(sc,"Select city, Zhvi, RegionName, X5Year, X10Year from zillow_data")
boston <- city %>% filter(city == "Chicago")
san_antonio <- city %>% filter(city== 'San Antonio')
View(san_antonio)
View(boston)
chicago <- zillow_city %>% filter(city == "Chicago")
chicago <- city %>% filter(city == "Chicago")
View(chicago)
collect (chicago) %>% ggplot ()+ aes(X5Year,RegionName) +geom_col()
collect (chicago) %>% ggplot ()+ aes(X5Year) +geom_bar()
collect (chicago) %>% ggplot ()+ aes(RegionName, X5Year) +geom_line()
collect (chicago) %>% ggplot ()+ aes(RegionName, X5Year) +geom_point()
boston %>% dbplot_bar(RegionName,mean(X5Year))
boston %>% dbplot_line(RegionName,mean(X10Year))
zipcode <- dbGetQuery (sc, "Select * from HPI")
zipcode <- dbGetQuery (sc, "Select * from hpi_data")
san_ant_zip <- zipcode %>% filter (Five_Digit_ZIP_Code == 78006)
View(san_ant_zip)
collect (san_ant_zip) %>% ggplot ()+ aes(Year,HPI) +geom_point()
chicago %>% dbplot_bar(RegionName,mean(X5Year))
chicago %>% dbplot_line(RegionName,mean(X10Year))
#Chicago
chic_zip <- zipcode %>% filter (Five_Digit_ZIP_Code == 60007)
collect (chic_zip) %>% ggplot ()+ aes(x=Year, y= reorder(HPI, desc(-Year))) + geom_point()
#boxplot
collect (chic_zip) %>% ggplot()+ aes(RegionName == 60007, Zhvi) +geom_boxplot()
table(zd_tbl)
View(zd_tbl)
View(hpi_data)
View(zillow_data)
ab <- dbGetQuery(sc,"select county,mom from zillow_data group by city, order by Zhvi desc ")
ab <- dbGetQuery(sc,"select county,MoM from zillow_data group by city, order by Zhvi desc ")
ab <- dbGetQuery(sc,"select county,MoM,Zhvi from zillow_data  order by Zhvi desc ")
View(ab)
spark_install(version = "3.0.1")
zhvi_top10 <- dbGetQuery(sc,"select county,MoM,Zhvi from zillow_data  order by Zhvi desc limit 10 ")
View(zhvi_top10)
view(hpi_data)
View(hpi_data)
View(chic_zip)
View(boston)
View(san_ant_zip)
collect (chic_zip) %>% ggplot ()+ aes(x=Year, y= reorder(HPI, desc(-Year))) + geom_point()
View(zhvi_top10)
ballbyball <- read.csv("C:/Users/itzro/OneDrive/Desktop/ipl/ballbyball.csv", na.strings="", stringsAsFactors=FALSE)
View(ballbyball)
IPL.Matches.2008.2020 <- read.csv("C:/Users/itzro/OneDrive/Desktop/ipl/IPL Matches 2008-2020.csv", na.strings="", stringsAsFactors=FALSE)
View(IPL.Matches.2008.2020)
View(IPL.Matches.2008.2020)
matches <- IPL.Matches.2008.2020
library(tidyr)
ball_data <- merge(ballbyball, matches, by.x= 'id', by.y='id')
View(ball_data)
batsman_data <- ball_data[c('id','venue','inning','batsman','batsman_runs'),]
View(batsman_data)
batsman_data <- ball_data[c('id','venue','inning','batsman','batsman_runs'),]
View(batsman_data)
batsman_data <- ball_data[,c('id','venue','inning','batsman','batsman_runs')]
View(batsman_data)
batsman_data <- batsman_data %>% group_by(id,venue,inning,batsman) %>% summarize(total_runs = sum(batsman_runs))
View(batsman_data)
library(dplyr)
batsman_data <- batsman_data %>% group_by(id,venue,inning,batsman) %>% summarize(total_runs = sum(batsman_runs))
View(batsman_data)
View(ball_data)
batsman_data <- ball_data[,c('id','venue','inning','batsman','batsman_runs')]
View(batsman_data)
%>% mutate(fours=ifelse(batsman_runs == 4, 1, 0))
library(dplyr)
%>% mutate(fours=ifelse(batsman_runs == 4, 1, 0))
batsman_data <- ball_data %>% select(id,venue,inning,batsman,batsman_runs)
mutate(batsman_data, fours=ifelse(batsman_runs == 4, 1, 0))
batsaman_data <- mutate(batsman_data, fours=ifelse(batsman_runs == 4, 1, 0))
View(batsaman_data)
batsaman_data <- mutate(batsman_data, fours=ifelse(batsman_runs == 6, 1, 0))
batsman_data <- ball_data %>% select(id,venue,inning,batsman,batsman_runs)
batsaman_data <- mutate(batsman_data, fours=ifelse(batsman_runs == 4, 1, 0))
batsaman_data <- mutate(batsman_data, sixes=ifelse(batsman_runs == 6, 1, 0))
batsman_data <- batsman_data %>% group_by(id,venue,inning,batsman) %>% summarize(total_runs = sum(batsman_runs), total_fours = sum(fours), total_six = sum(sixes))
View(batsaman_data)
batsman_data <- mutate(batsman_data, fours=ifelse(batsman_runs == 4, 1, 0))
batsman_data <- mutate(batsman_data, sixes=ifelse(batsman_runs == 6, 1, 0))
batsman_data <- batsman_data %>% group_by(id,venue,inning,batsman) %>% summarize(total_runs = sum(batsman_runs), total_fours = sum(fours), total_six = sum(sixes))
View(batsman_data)
View(ball_data)
batsman_data <- ball_data %>% select(date,id,venue,inning,batsman,batsman_runs)
batsman_data <- mutate(batsman_data, fours=ifelse(batsman_runs == 4, 1, 0))
batsman_data <- mutate(batsman_data, sixes=ifelse(batsman_runs == 6, 1, 0))
library(stringr)
batsman_data$date <- str_replace_all(batsman_data$date, "-", "")
batsman_data <- batsman_data %>% group_by(date,venue,inning,batsman) %>% summarize(total_runs = sum(batsman_runs), total_fours = sum(fours), total_six = sum(sixes))
write.csv(batsman_data,"C:/Users/itzro/OneDrive/Desktop/ipl/batsman.csv")
write.csv(batsman_data,"C:/Users/itzro/OneDrive/Desktop/ipl/batsman.csv", row.names = FALSE)
batsman_data <- ball_data %>% select(date,id,venue,inning,batsman,batsman_runs)
batsman_data <- mutate(batsman_data, fours=ifelse(batsman_runs == 4, 1, 0))
batsman_data <- mutate(batsman_data, sixes=ifelse(batsman_runs == 6, 1, 0))
batsman_data$date <- str_replace_all(batsman_data$date, "-", "")
batsman_data <- batsman_data %>% group_by(date,venue,inning,batsman) %>% summarize(total_balls = n(), total_runs = sum(batsman_runs), total_fours = sum(fours), total_six = sum(sixes))
View(batsman_data)
write.csv(batsman_data,"C:/Users/itzro/OneDrive/Desktop/ipl/batsman.csv", row.names = FALSE)
write.csv(batsman_data,"C:/Users/itzro/OneDrive/Desktop/ipl/batsman.csv", row.names = FALSE)
batsman_data %>% filter(batsman = "DA Warner") %>% summarize(balls = sum(total_balls), runs = sum(total_runs), fours = sum(total_fours), sixes = sum(total_six))
batsman_data %>% filter(batsman == "DA Warner") %>% summarize(balls = sum(total_balls), runs = sum(total_runs), fours = sum(total_fours), sixes = sum(total_six))
warner <- batsman_data %>% filter(batsman == "DA Warner")
View(warner)
warner <- batsman_data %>% filter(batsman == "DA Warner" and date > 20181231)
warner <- batsman_data %>% filter(batsman == "DA Warner" & date > 20181231)
View(warner)
View(warner)
warner <- warner %>% group_by(batsman) %>% summarize(balls = sum(total_balls), runs = sum(total_runs), fours = sum(total_fours), sixes = sum(total_six))
View(warner)
ballbyball <- read.csv("C:/Users/itzro/OneDrive/Desktop/ipl/ballbyball.csv", na.strings="", stringsAsFactors=FALSE)
View(ballbyball)
library(dplyr)
batsman_data <- ballbyball %>% select(batsman, bowler, batsman_runs, is_wicket)
View(batsman_data)
batsman_data <- batsman_data %>% group_by(batsman, bowler) %>% summarize(runs = sum(batsman_runs), wickets = sum(is_wicket), ballsfaced = n())
View(batsman_data)
analysis <- batsman_data %>% filter(batsman in batsman_name)
analysis <- batsman_data %>% filter(batsman == batsman_name)
batsman_name = c('V Kohli')
analysis <- batsman_data %>% filter(batsman == batsman_name)
View(analysis)
bowlers <- ballbyball %>% select(bowler)
View(bowlers)
bowlers <- unique(ballbyball %>% select(bowler))
View(bowlers)
write.csv(bowlers,"C:/Users/itzro/OneDrive/Desktop/ipl/bowlers.csv", row.names = FALSE)
analysis <- batsman_data %>% filter(batsman == batsman_name and wickets >= 4)
analysis <- batsman_data %>% filter(batsman == batsman_name && wickets >= 4)
View(analysis)
analysis <- batsman_data %>% filter(batsman == batsman_name)
analysis <- batsman_data %>% filter(batsman == batsman_name && wickets >=4)
analysis <- batsman_data %>% filter(batsman == batsman_name & wickets == 4)
View(analysis)
analysis <- batsman_data %>% filter(batsman == batsman_name & wickets >= 4)
batsman_data <- ballbyball %>% select(batsman, bowler,dismissal_kind, batsman_runs, is_wicket)
batsman_data <- batsman_data %>% group_by(batsman, bowler,dismissal_kind) %>% summarize(runs = sum(batsman_runs), wickets = sum(is_wicket), ballsfaced = n())
analysis <- batsman_data %>% filter(batsman == batsman_name & wickets >= 4)
analysis <- batsman_data %>% filter(batsman == batsman_name)
batsman_data <- batsman_data %>% filter(wickets != 'run out')
batsman_data1 <- batsman_data %>% group_by(batsman, bowler) %>% summarize(runs = sum(batsman_runs), wickets = sum(is_wicket), ballsfaced = n())
batsman_data2 <- batsman_data %>% group_by(batsman,dismissal_kind) %>% summarize(runs = sum(batsman_runs), wickets = sum(is_wicket), ballsfaced = n())
analysis <- batsman_data %>% filter(batsman == batsman_name)
analysis <- batsman_data1 %>% filter(batsman == batsman_name)
analysis2 <- batsman_data2 %>% filter(batsman == batsman_name)
batsman_data <- batsman_data %>% filter(wickets != 'run out')
batsman_data <- ballbyball %>% select(batsman, bowler,dismissal_kind, batsman_runs, is_wicket)
batsman_data <- batsman_data %>% filter(wickets != 'run out')
batsman_data <- batsman_data %>% filter(dismissal_kind != 'run out')
batsman_data1 <- batsman_data %>% group_by(batsman, bowler) %>% summarize(runs = sum(batsman_runs), wickets = sum(is_wicket), ballsfaced = n())
batsman_data2 <- batsman_data %>% group_by(batsman,dismissal_kind) %>% summarize(runs = sum(batsman_runs), wickets = sum(is_wicket), ballsfaced = n())
analysis <- batsman_data1 %>% filter(batsman == batsman_name)
analysis2 <- batsman_data2 %>% filter(batsman == batsman_name)
View(analysis)
View(analysis2)
install.packages('dplyr')
;
install.packages(GEOquery)
BiocManager::install("GEOquery")
install.packages("BiocManager")
BiocManager::install("GEOquery")
gse<- getGEO(id1)
library("GEOquery")
id1<-"GSE138746"
gse<- getGEO(id1)
length(gse)
gse<-gse[[1]]
gse
pData(gse)
pheno1<-pData(gse)
View(pheno1)
View(pheno1)
getwd()
setwd("C:/Users/itzro/Downloads/GSE138746_Counts_Normalization_PBMC.csv.gz)
ibrary('pacman')
p_load("R.utils","data.table")
data=fread("GSE138746_Counts_Normalization_cd14.csv.gz")
View(data)
setwd("C:/Users/itzro/Downloads/GSE138746_Counts_Normalization_PBMC.csv.gz)
ibrary('pacman')
p_load("R.utils","data.table")
data=fread("GSE138746_Counts_Normalization_cd14.csv.gz")
library("GEOquery")
library('pacman')
p_load("R.utils","data.table")
data=fread("GSE138746_Counts_Normalization_PBMC.csv.gz")
setwd("C:/Users/itzro/Downloads/GSE138746_Counts_Normalization_PBMC.csv.gz)
library('pacman')
p_load("R.utils","data.table")
data=fread("GSE138746_Counts_Normalization_PBMC.csv.gz")
view(data)
setwd("C:/Users/itzro/Downloads/GSE138746_Counts_Normalization_PBMC.csv.gz)
library('pacman')
p_load("R.utils","data.table")
data=fread("GSE138746_Counts_Normalization_PBMC.csv.gz")
View(data)
data=fread("GSE138746_Counts_Normalization_PBMC.csv.gz")
View(data)
data<-fread("GSE138746_Counts_Normalization_PBMC.csv.gz")
View(data)
data=fread("GSE138746_Counts_Normalization_PBMC.csv.gz")
setwd("C:/Users/itzro/Downloads/GSE138746_Counts_Normalization_PBMC.csv.gz")
View(data)
data<-fread("GSE138746_Counts_Normalization_PBMC.csv.gz")
getwd()
p_load("R.utils","data.table")
data<-fread("GSE138746_Counts_Normalization_PBMC.csv.gz")
View(data)
data1<-fread("GSE138746_Counts_Normalization_PBMC.csv.gz")
data2<-fread("GSE138746_Counts_Normalization_cd4.csv.gz")
data3<-fread("GSE138746_Counts_Normalization_cd14.csv.gz")
View(data1)
View(data2)
View(data3)
data3<-fread("GSE138746_rawReadsData.csv.gz")
View(data4)
View(data4)
data4<-fread("GSE138746_rawReadsData.csv.gz")
View(data4)
data4t<- as.data.frame(t(as.matrix(data4)))
data4t<- as.data.frame(t(as.matrix(data4)))
View(data4t)
View(pheno1)
# echo=T to show the code, eval=T to show the results ----
knitr::opts_chunk$set(echo = T, eval=T)
# Pre-load packages ----
library(tidyverse)
library(ggplot2)
library(tinytex)
# boxplot to visualize the width of petal among species ordered byvirginica, versicolor, setosa
ggplot(iris,aes(x=Petal.Width,y=Species))+
geom_boxplot()+
ggtitle("Petal Width VS Species")+
xlab("Petal Width")+
ylab("Species")
#Create a scatter plot to visualize the length of Sepal versus the length of Petal and facet this scatter plot bySpecies
ggplot(iris,aes(x=Sepal.Length,y=Petal.Length,col,color=Sepal.Width,size=Petal.Width))+
geom_point()+
#facet_grid(iris$Species)+
ggtitle("Sepal Length VS Petal length")+
xlab("Sepal length")+
ylab("petal length")
ggplot(iris,aes(x=Sepal.Length,y=Petal.Length,col,color=Sepal.Width,size=Petal.Width))+
geom_point()+
facet_grid(iris$Species)+
ggtitle("Sepal Length VS Petal length")+
xlab("Sepal length")+
ylab("petal length")
View(mpg)
mpg1 <- mpg[,c("manufacturer","model", "trans", "drv","hwy","class")]
colnames(mpg)
names(mpg1)[3]<- "Transmission-Type"
names(mpg1)[4]<- "driveType"
names(mpg1)[5]<- "hwyMPG"
colnames(mpg1)
mpg2 <-mpg1[mpg1$manufacturer%in%c("ford", "honda", "hyundai", "jeep", "nissan", "toyota"), ]
mpg2 <-mpg2[mpg2$driveType == "4", ]
mpg2 <-mpg2[mpg2$class == "suv",]
mpg2<-mpg2[mpg2$hwyMPG >18, ]
suv<- list(mpg2)
names(suv)<- "suv18"
applyFun<-function(df,f,...){
var<-vector("list",length(df))
for (i in 1:length(df)){
var[[i]]<-f(df[[i]],...)
}
paste(substitute(f),"of",names(df),"is",var)
}
applyFun(mpg[, c("hwy", "displ")], mean)
applyFun(mpg[,"hwy"], quantile, probs=1:3/4)
applyFun(suv$suv18[, c("class")], toupper)
install.packages('tinytex')
install.packages("tinytex")
install.packages("tinytex")
install.packages("tinytex")
# echo=T to show the code, eval=T to show the results ----
knitr::opts_chunk$set(echo = T, eval=T)
# Pre-load packages ----
library(tidyverse)
library(ggplot2)
library(tinytex)
library(tinytex)
# boxplot to visualize the width of petal among species ordered byvirginica, versicolor, setosa
ggplot(iris,aes(x=Petal.Width,y=Species))+
geom_boxplot()+
ggtitle("Petal Width VS Species")+
xlab("Petal Width")+
ylab("Species")
# boxplot to visualize the width of petal among species ordered byvirginica, versicolor, setosa
ggplot(iris,aes(x=Petal.Width,y=Species))+
geom_boxplot()+
ggtitle("Petal Width VS Species")+
xlab("Petal Width")+
ylab("Species")
#Create a scatter plot to visualize the length of Sepal versus the length of Petal and facet this scatter plot bySpecies
ggplot(iris,aes(x=Sepal.Length,y=Petal.Length,col,color=Sepal.Width,size=Petal.Width))+
geom_point()+
#facet_grid(iris$Species)+
ggtitle("Sepal Length VS Petal length")+
xlab("Sepal length")+
ylab("petal length")
ggplot(iris,aes(x=Sepal.Length,y=Petal.Length,col,color=Sepal.Width,size=Petal.Width))+
geom_point()+
facet_grid(iris$Species)+
ggtitle("Sepal Length VS Petal length")+
xlab("Sepal length")+
ylab("petal length")
View(mpg)
mpg1 <- mpg[,c("manufacturer","model", "trans", "drv","hwy","class")]
colnames(mpg)
names(mpg1)[3]<- "Transmission-Type"
names(mpg1)[4]<- "driveType"
names(mpg1)[5]<- "hwyMPG"
colnames(mpg1)
mpg2 <-mpg1[mpg1$manufacturer%in%c("ford", "honda", "hyundai", "jeep", "nissan", "toyota"), ]
mpg2 <-mpg2[mpg2$driveType == "4", ]
mpg2 <-mpg2[mpg2$class == "suv",]
mpg2<-mpg2[mpg2$hwyMPG >18, ]
suv<- list(mpg2)
names(suv)<- "suv18"
applyFun<-function(df,f,...){
var<-vector("list",length(df))
for (i in 1:length(df)){
var[[i]]<-f(df[[i]],...)
}
paste(substitute(f),"of",names(df),"is",var)
}
applyFun(mpg[, c("hwy", "displ")], mean)
applyFun(mpg[,"hwy"], quantile, probs=1:3/4)
applyFun(suv$suv18[, c("class")], toupper)
# boxplot to visualize the width of petal among species ordered byvirginica, versicolor, setosa
ggplot(iris,aes(x=Petal.Width,y=Species))+
geom_boxplot()+
ggtitle("Petal Width VS Species")+
xlab("Petal Width")+
ylab("Species")
# echo=T to show the code, eval=T to show the results ----
knitr::opts_chunk$set(echo = T, eval=T)
# Pre-load packages ----
library(tidyverse)
library(ggplot2)
library(tinytex)
# boxplot to visualize the width of petal among species ordered byvirginica, versicolor, setosa
ggplot(iris,aes(x=Petal.Width,y=Species))+
geom_boxplot()+
ggtitle("Petal Width VS Species")+
xlab("Petal Width")+
ylab("Species")
#Create a scatter plot to visualize the length of Sepal versus the length of Petal and facet this scatter plot bySpecies
ggplot(iris,aes(x=Sepal.Length,y=Petal.Length,col,color=Sepal.Width,size=Petal.Width))+
geom_point()+
#facet_grid(iris$Species)+
ggtitle("Sepal Length VS Petal length")+
xlab("Sepal length")+
ylab("petal length")
ggplot(iris,aes(x=Sepal.Length,y=Petal.Length,col,color=Sepal.Width,size=Petal.Width))+
geom_point()+
facet_grid(iris$Species)+
ggtitle("Sepal Length VS Petal length")+
xlab("Sepal length")+
ylab("petal length")
View(mpg)
mpg1 <- mpg[,c("manufacturer","model", "trans", "drv","hwy","class")]
colnames(mpg)
names(mpg1)[3]<- "Transmission-Type"
names(mpg1)[4]<- "driveType"
names(mpg1)[5]<- "hwyMPG"
colnames(mpg1)
mpg2 <-mpg1[mpg1$manufacturer%in%c("ford", "honda", "hyundai", "jeep", "nissan", "toyota"), ]
mpg2 <-mpg2[mpg2$driveType == "4", ]
mpg2 <-mpg2[mpg2$class == "suv",]
mpg2<-mpg2[mpg2$hwyMPG >18, ]
suv<- list(mpg2)
names(suv)<- "suv18"
applyFun<-function(df,f,...){
var<-vector("list",length(df))
for (i in 1:length(df)){
var[[i]]<-f(df[[i]],...)
}
paste(substitute(f),"of",names(df),"is",var)
}
applyFun(mpg[, c("hwy", "displ")], mean)
applyFun(mpg[,"hwy"], quantile, probs=1:3/4)
applyFun(suv$suv18[, c("class")], toupper)
install.MikTeX(page_with_download_url = "https://miktex.org/download", ...)
install.packages('MikTex')
install.packages('MiKTeX')
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("rtracklayer")
library("rtracklayer")
BiocManager::install('rtracklayer')
EV <- read.csv("C:/Users/itzro/OneDrive/Desktop/EV.csv", header=FALSE)
View(EV)
setwd("C:/Users/itzro/Downloads/project-RShiny-The dark side (1)/project-RShiny-The dark side/RshinyApp")
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
